{
  "name": "Stacks",
  "channel": "809480002000126012",

  "description": {
    "general": "Write a program that prints `n` vertical stacks of the character # of varying heights.",
    "input": "On the first line, the value `n` is provided, indicating the number of vertical stacks to print. On the following line, `n` numbers are provided, numbered `h(1)` through `h(n)`.",
    "output": "`n` vertical stacks made of # characters printed next to each other. Stack `x` has a height of `h(x)`. The hashes must be printed from bottom up (more hashes at lower lines, more spaces at higher lines). Each line must have `n` characters.",

    "samples": [
      {
        "input": "3\n1 2 3",
        "output": "  #\n ##\n###",
        "explanation": " * Note how there are 3 columns, each with 1, 2 and 3 `#` characters each."
      },
      {
        "input": "4\n4 7 5 6",
        "output": " #  \n # #\n ###\n####\n####\n####\n####"
      }
    ]
  },

  "tests": [
    {
      "input": "3\n1 2 3",
      "output": "  #\n ##\n###"
    },
    {
      "input": "4\n4 7 5 6",
      "output": " #  \n # #\n ###\n####\n####\n####\n####"
    },
    {
      "input": "8\n1 1 1 1 1 1 1 1",
      "output": "########"
    },
    {
      "input": "15\n2 3 4 5 6 7 8 9 1 2 3 4 5 6 7",
      "output": "       #       \n      ##       \n     ###      #\n    ####     ##\n   #####    ###\n  ######   ####\n #######  #####\n######## ######\n###############"
    },
    {
      "input": "13\n8 7 6 5 2 1 4 3 2 1 100 2 1",
      "output": "          #  \n          #  \n          #  \n          #  \n          #  \n          #  \n          #  \n          #  \n          #  \n          #  \n          #  \n          #  \n          #  \n          #  \n          #  \n          #  \n          #  \n          #  \n          #  \n          #  \n          #  \n          #  \n          #  \n          #  \n          #  \n          #  \n          #  \n          #  \n          #  \n          #  \n          #  \n          #  \n          #  \n          #  \n          #  \n          #  \n          #  \n          #  \n          #  \n          #  \n          #  \n          #  \n          #  \n          #  \n          #  \n          #  \n          #  \n          #  \n          #  \n          #  \n          #  \n          #  \n          #  \n          #  \n          #  \n          #  \n          #  \n          #  \n          #  \n          #  \n          #  \n          #  \n          #  \n          #  \n          #  \n          #  \n          #  \n          #  \n          #  \n          #  \n          #  \n          #  \n          #  \n          #  \n          #  \n          #  \n          #  \n          #  \n          #  \n          #  \n          #  \n          #  \n          #  \n          #  \n          #  \n          #  \n          #  \n          #  \n          #  \n          #  \n          #  \n          #  \n#         #  \n##        #  \n###       #  \n####      #  \n####  #   #  \n####  ##  #  \n##### ### ## \n#############"
    },
    {
      "input": "9\n4 4 4 4 4 4 4 4 5",
      "output": "        #\n#########\n#########\n#########\n#########"
    },
    {
      "input": "5\n8 10 40 10 8",
      "output": "  #  \n  #  \n  #  \n  #  \n  #  \n  #  \n  #  \n  #  \n  #  \n  #  \n  #  \n  #  \n  #  \n  #  \n  #  \n  #  \n  #  \n  #  \n  #  \n  #  \n  #  \n  #  \n  #  \n  #  \n  #  \n  #  \n  #  \n  #  \n  #  \n  #  \n ### \n ### \n#####\n#####\n#####\n#####\n#####\n#####\n#####\n#####"
    },
    {
      "input": "11\n1 2 3 4 5 6 5 4 3 2 1",
      "output": "     #     \n    ###    \n   #####   \n  #######  \n ######### \n###########"
    },
    {
      "input": "9\n100 89 93 22 100 100 24 3 100",
      "output": "#   ##  #\n#   ##  #\n#   ##  #\n#   ##  #\n#   ##  #\n#   ##  #\n#   ##  #\n# # ##  #\n# # ##  #\n# # ##  #\n# # ##  #\n### ##  #\n### ##  #\n### ##  #\n### ##  #\n### ##  #\n### ##  #\n### ##  #\n### ##  #\n### ##  #\n### ##  #\n### ##  #\n### ##  #\n### ##  #\n### ##  #\n### ##  #\n### ##  #\n### ##  #\n### ##  #\n### ##  #\n### ##  #\n### ##  #\n### ##  #\n### ##  #\n### ##  #\n### ##  #\n### ##  #\n### ##  #\n### ##  #\n### ##  #\n### ##  #\n### ##  #\n### ##  #\n### ##  #\n### ##  #\n### ##  #\n### ##  #\n### ##  #\n### ##  #\n### ##  #\n### ##  #\n### ##  #\n### ##  #\n### ##  #\n### ##  #\n### ##  #\n### ##  #\n### ##  #\n### ##  #\n### ##  #\n### ##  #\n### ##  #\n### ##  #\n### ##  #\n### ##  #\n### ##  #\n### ##  #\n### ##  #\n### ##  #\n### ##  #\n### ##  #\n### ##  #\n### ##  #\n### ##  #\n### ##  #\n### ##  #\n### ### #\n### ### #\n####### #\n####### #\n####### #\n####### #\n####### #\n####### #\n####### #\n####### #\n####### #\n####### #\n####### #\n####### #\n####### #\n####### #\n####### #\n####### #\n####### #\n####### #\n####### #\n#########\n#########\n#########"
    }
  ]
}